#include "search_worker.h"
#include "thread_structure.h"
#include <algorithm>
#include <iostream>

using namespace std;

struct SeqInfoCmpLength
{
	bool operator()(const SeqInfo& a, const SeqInfo& b)
	{
		if (a.sequence_length < b.sequence_length) return true;
		return false;
	}
};

void PrintSequence(DbInfo& dbinfo, int i)
{
	const char* header = dbinfo.GetSeqHeader(i);
	const char* sequence = dbinfo.GetDb() + dbinfo.GetSeqOffset(i);
	int length = dbinfo.GetSeqLength(i);

	cout << ">" << header << endl;
	int left = length;
	const int kLineLen = 60;
	int index = 0;

	while (left > 0)
	{
		int len = kLineLen;
		if (left < kLineLen) len = left;
		for (int j = 0; j < len; ++j) cout << sequence[index++];
		cout << endl;
		left -= len;
	}
}

int main()
{
	DbInfo dbinfo("org_revised_Q8h-4k.fa");
	dbinfo.BuildDbInfo();

	SeqInfo* sinfos = dbinfo.GetSeqInfos();
	std::sort(sinfos, sinfos + dbinfo.GetNumSeqs(), SeqInfoCmpLength());

	int n = dbinfo.GetNumSeqs();
	for (int i = 0; i < n; ++i)
		PrintSequence(dbinfo, i);
}
